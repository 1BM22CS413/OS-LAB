Skip to content
1BM22CS412
/
OPERATING-SYSTEM

Type / to search

Code
Issues
Pull requests
Actions
Projects
Security
Insights
Pane width
Use a value between 13% and 50%

17
Change width
Code
Go to file
t
DINING PHILOSOPHER.c
EDF.c
FCFS,SJF,SRTF.C
MULTI-LEVEL.c
PRIORITY.c
PRODUCER CONSUMER.c
RATE-MONOTONIC-SCHEDULING.c
README.md
ROUNDROBIN.c
Documentation • Share feedback
BreadcrumbsOPERATING-SYSTEM
/PRODUCER CONSUMER.c
Latest commit
1BM22CS412
1BM22CS412
Add files via upload
e5a443d
 · 
4 days ago
History
File metadata and controls

Code

Blame
66 lines (60 loc) · 915 Bytes
#include<stdio.h>
#include<stdlib.h>

int mutex=1,full=0,empty=3,x=0;

int main()
{
int n;
void producer();
void consumer();
int wait(int);
int signal(int);
printf("\n1.Producer\n2.Consumer\n3.Exit");
while(1)
{
printf("\nEnter your choice:");
scanf("%d",&n);
switch(n)
{
case 1: if((mutex==1)&&(empty!=0))
producer();
else
printf("Buffer is full!!");
break;
case 2: if((mutex==1)&&(full!=0))
consumer();
else
printf("Buffer is empty!!");
break;
case 3:
exit(0);
break;
}
}
return 0;
}

int wait(int s)
{
return (--s);
}

int signal(int s)
{
return(++s);
}

void producer()
{
mutex=wait(mutex);
full=signal(full);
empty=wait(empty);
x++;
printf("\nProducer produces the item %d",x);
mutex=signal(mutex);
}

void consumer()
{
mutex=wait(mutex);
full=wait(full);
empty=signal(empty);
printf("\nConsumer consumes item %d",x);
x--;
mutex=signal(mutex);
}
OPERATING-SYSTEM/PRODUCER CONSUMER.c at main · 1BM22CS412/OPERATING-SYSTEMWhile the code is focused, press Alt+F1 for a menu of operations.